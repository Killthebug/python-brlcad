From 14638b201727021ece576b377abc5eeee2e96b80 Mon Sep 17 00:00:00 2001
From: Jaipal Singh <jpsinghgoud@gmail.com>
Date: Fri, 20 Jul 2018 22:11:35 +0530
Subject: [PATCH 30/47] Fixed examples and tests

---
 examples/.DS_Store            | Bin 0 -> 8196 bytes
 examples/class_rounded_rcc.py |   4 ++--
 examples/draw_primitive.py    |   2 +-
 examples/hilbert_2d.py        |   2 +-
 examples/hilbert_3d.py        |   2 +-
 examples/script.py            |   4 ++--
 examples/sgi.py               |   4 ++--
 examples/wdb_example.py       |   4 ++--
 examples/wdb_globe.py         |   2 +-
 examples/wdb_primitives.py    |   2 +-
 tests/test_bot.py             |   6 +++---
 tests/test_sketch.py          |   6 +++---
 tests/test_wdb.py             |  10 +++++-----
 13 files changed, 24 insertions(+), 24 deletions(-)
 create mode 100644 examples/.DS_Store

diff --git a/examples/.DS_Store b/examples/.DS_Store
new file mode 100644
index 0000000000000000000000000000000000000000..e24436b3c5fbe4fcaa918c4940ea246e8667aea2
GIT binary patch
literal 8196
zcmeHM&2AGh5dI7yEEG@?P<q@Wr%J$)%c?2|&OAUMX_TzAZK7lg>1{8(1FyiF_09v(
zZ^qWj`-du3LX{Xt_Bh`8X6(=7ti}Q0jxSE%0*3$+R+0OAY<h}3m)a@!!pH%oBOb_6
zV#3c6)*WpdFb0ePW55_N28@BbzyRObQj&r9zJF@1F<=b*mkh}7L&_>L3$pT3e>&J`
z3P3sHuom{22Ph^DG7GZuQlYfzvj-QTE~FUF!}&ZFb;>Nr%1aN2^KiJ}*@X<nsdwU1
zRfo&GwAL6f2D%JL?!Kovdyex){(kwXSk0!zYDx_`R3BL1{L#W5@CskCQN$8+obg-9
zZ!_9j>ys@<H+mD$w)CrI>EPy;Fl)}ry>8hWa|R_YIfps6E!`h2-4RYP<qQ`sz27ap
zr&w}j1$AXba>MbCNV(%^uS_`l8FAD_z8^peCoyu&-I(J$y=<{;&QEs2T}57!pgS2@
zk8l**evB0^xQ?~9vW^_PrVl4v{T*}O%Ug_jLCYKZl9-U_DwRJOn}_}Yhc1a$_wr^|
z+K~Y=+OYG8OwQ;#r@gXo_av4YhzCS0sNancveVFfSZl7i&YpN`?AJKbZbgt|><w5h
zIs2lyOBxBgh^s_-J>v?G*z4*GC$auBMwpy|33p`2Qz*!S{hobMc4F+48oMB7rKh70
zCtSt2=QU0uA*WBdHO%piez(1zg_GKXz5jVKtr!EhXW+g!aVYu!$Km_`+dDD~#(*(!
zXBlv#lg}r|oL+dhb|xyhcFOvNRf_0UUMhr*rsI^Fj#Jiu7_y&IRWMnQm6sf0v5Nqu
L!5U-WpE7U_hUQM<

literal 0
HcmV?d00001

diff --git a/examples/class_rounded_rcc.py b/examples/class_rounded_rcc.py
index 949784f..2a4a118 100644
--- a/examples/class_rounded_rcc.py
+++ b/examples/class_rounded_rcc.py
@@ -5,7 +5,7 @@ Run : python rounded_rcc.py <<db>>.g
 import sys
 from brlcad.primitives import union
 from draw_primitive import *
-import brlcad.wdb as wdb
+from brlcad.geometry import Database
 
 class rounded_rcc():
     def __init__(self, brl_db, inmem):
@@ -48,6 +48,6 @@ if __name__ == "__main__":
     argv = sys.argv
     union_list = []
     database_name = argv[1]
-    brl_db = wdb.WDB(database_name, "fml.g")
+    brl_db = Database(database_name, "fml.g")
     myObject = rounded_rcc(brl_db)
     myObject.create(50, 220, 21)
\ No newline at end of file
diff --git a/examples/draw_primitive.py b/examples/draw_primitive.py
index fac79c1..1326255 100644
--- a/examples/draw_primitive.py
+++ b/examples/draw_primitive.py
@@ -2,7 +2,7 @@ import sys
 
 from brlcad.primitives import union
 
-import brlcad.wdb as wdb
+import brlcad.geometry as geometry
 
 def draw_sphere(primitive_name, arguments, brl_db):
 	center = [float(x) for x in arguments[:3]]
diff --git a/examples/hilbert_2d.py b/examples/hilbert_2d.py
index 3b3d669..89d1772 100644
--- a/examples/hilbert_2d.py
+++ b/examples/hilbert_2d.py
@@ -2,7 +2,7 @@
 Fractal pipes :-)
 """
 from brlcad.vmath import Vector
-import brlcad.wdb as wdb
+from brlcad.geometry import Database
 import sys
 
 
diff --git a/examples/hilbert_3d.py b/examples/hilbert_3d.py
index 97fcabe..2a6fef0 100644
--- a/examples/hilbert_3d.py
+++ b/examples/hilbert_3d.py
@@ -2,7 +2,7 @@
 3D Hilbert space filling curve with pipes.
 """
 from brlcad.vmath import Vector
-import brlcad.wdb as wdb
+from brlcad.geometry import Database
 import sys
 
 
diff --git a/examples/script.py b/examples/script.py
index 7091496..37914ff 100644
--- a/examples/script.py
+++ b/examples/script.py
@@ -30,7 +30,7 @@ import argparse
 import errno
 import sys
 import os
-import brlcad.wdb as wdb
+import brlcad.geometry as geometry
 from proc_interpreter import Procedure
 from arithematic_parser import *
 from brlcad.primitives import *
@@ -566,6 +566,6 @@ if __name__ == "__main__":
 	database_name = ' '.join(commands[0].split()[1:])
 	units = commands[1].split()[1]
 	commands = commands[2:]
-	brl_db = wdb.WDB(database_name, "db.g")
+	brl_db = geometry.Database(database_name, "db.g")
 	parse_script(database_name, units, commands)
 
diff --git a/examples/sgi.py b/examples/sgi.py
index 9e97bb0..e8ec03e 100644
--- a/examples/sgi.py
+++ b/examples/sgi.py
@@ -11,7 +11,7 @@ To Render :
 import sys
 from brlcad.primitives import union
 from draw_primitive import *
-import brlcad.wdb as wdb
+import brlcad.geometry as geometry
 
 def right(a, b, rcc_name, sph_name):
     global x
@@ -63,7 +63,7 @@ if __name__ == "__main__":
     i, j, radius = 1000, 800, 100
     # starting position
     x, y, z = 0, 0, 0
-    brl_db = wdb.WDB(database_name, "SGI.g")
+    brl_db = geometry.Database(database_name, "SGI.g")
     forward_list, back_list = [100, 107, 114], [105, 109, 116]
     up_list, down_list      = [104, 111, 115], [102, 106, 113]
     right_list, left_list   = [103, 110, 117], [101, 108, 112]
diff --git a/examples/wdb_example.py b/examples/wdb_example.py
index 1b002a3..43aa440 100644
--- a/examples/wdb_example.py
+++ b/examples/wdb_example.py
@@ -30,10 +30,10 @@ import sys
 
 from brlcad.primitives import union
 
-import brlcad.wdb as wdb
+import brlcad.geometry as geometry
 
 def main(argv):
-    with wdb.WDB(argv[1], "My Database") as brl_db:
+    with geometry.Database(argv[1], "My Database") as brl_db:
 
         # All units in the database file are stored in millimeters. This constrains
         # the arguments to the mk_* routines to also be in millimeters.
diff --git a/examples/wdb_globe.py b/examples/wdb_globe.py
index 8d49867..bc08a6a 100644
--- a/examples/wdb_globe.py
+++ b/examples/wdb_globe.py
@@ -15,7 +15,7 @@ python attribution:
 """
 
 import argparse
-import brlcad.wdb as wdb
+from brlcad.geometry import Database
 from brlcad.primitives import subtract, union
 
 
diff --git a/examples/wdb_primitives.py b/examples/wdb_primitives.py
index 8d2f91f..e1c3282 100644
--- a/examples/wdb_primitives.py
+++ b/examples/wdb_primitives.py
@@ -1,5 +1,5 @@
 from brlcad.vmath import Transform
-import brlcad.wdb as wdb
+from brlcad.geometry import Database
 from brlcad import primitives
 
 if __name__ == "__main__":
diff --git a/tests/test_bot.py b/tests/test_bot.py
index e56c0cb..f71e482 100644
--- a/tests/test_bot.py
+++ b/tests/test_bot.py
@@ -1,7 +1,7 @@
 import os
 import unittest
 from brlcad.primitives import bot
-import brlcad.wdb as wdb
+import brlcad.geometry as geometry
 
 
 class BOTTestCase(unittest.TestCase):
@@ -15,10 +15,10 @@ class BOTTestCase(unittest.TestCase):
         # create the test DB:
         if os.path.isfile(cls.TEST_FILE_NAME):
             os.remove(cls.TEST_FILE_NAME)
-        with wdb.WDB(cls.TEST_FILE_NAME, "BRL-CAD geometry for testing sketch primitive") as brl_db:
+        with geometry.Database(cls.TEST_FILE_NAME, "BRL-CAD geometry for testing sketch primitive") as brl_db:
             brl_db.bot("bot.s")
         # load the DB and cache it in a class variable:
-        cls.brl_db = wdb.WDB(cls.TEST_FILE_NAME)
+        cls.brl_db = geometry.Database(cls.TEST_FILE_NAME)
 
     @classmethod
     def tearDownClass(cls):
diff --git a/tests/test_sketch.py b/tests/test_sketch.py
index 7b9faab..48bb6fa 100644
--- a/tests/test_sketch.py
+++ b/tests/test_sketch.py
@@ -3,7 +3,7 @@ import unittest
 import math
 from brlcad.primitives import Sketch
 
-import brlcad.wdb as wdb
+import brlcad.geometry as geometry
 
 
 class SketchTestCase(unittest.TestCase):
@@ -17,10 +17,10 @@ class SketchTestCase(unittest.TestCase):
         # create the test DB:
         if os.path.isfile(cls.TEST_FILE_NAME):
             os.remove(cls.TEST_FILE_NAME)
-        with wdb.WDB(cls.TEST_FILE_NAME, "BRL-CAD geometry for testing sketch primitive") as brl_db:
+        with Database(cls.TEST_FILE_NAME, "BRL-CAD geometry for testing sketch primitive") as brl_db:
             brl_db.sketch("sketch.s")
         # load the DB and cache it in a class variable:
-        cls.brl_db = wdb.WDB(cls.TEST_FILE_NAME)
+        cls.brl_db = geometry.Database(cls.TEST_FILE_NAME)
 
     @classmethod
     def tearDownClass(cls):
diff --git a/tests/test_wdb.py b/tests/test_wdb.py
index 0913354..f021e21 100644
--- a/tests/test_wdb.py
+++ b/tests/test_wdb.py
@@ -4,7 +4,7 @@ import unittest
 from brlcad.vmath import Vector, Transform
 import numpy as np
 import brlcad._bindings.libwdb as libwdb
-import brlcad.wdb as wdb
+import brlcad.geometry as geometry
 import brlcad.ctypes_adaptors as cta
 import brlcad.primitives as primitives
 
@@ -16,7 +16,7 @@ class WDBTestCase(unittest.TestCase):
         # create the test DB:
         if os.path.isfile("test_defaults.g"):
             os.remove("test_defaults.g")
-        with wdb.WDB("test_defaults.g", "BRL-CAD geometry for testing wdb defaults") as brl_db:
+        with Database("test_defaults.g", "BRL-CAD geometry for testing wdb defaults") as brl_db:
             brl_db.sphere("sphere.s")
             brl_db.rpp("rpp.s")
             brl_db.wedge("wedge.s")
@@ -58,7 +58,7 @@ class WDBTestCase(unittest.TestCase):
                 test_comb.tree.add_child(shape_name)
             brl_db.save(test_comb)
         # load the DB and cache it in a class variable:
-        cls.brl_db = wdb.WDB("test_defaults.g")
+        cls.brl_db = geometry.Database("test_defaults.g")
 
     @classmethod
     def tearDownClass(cls):
@@ -313,10 +313,10 @@ class WDBTestCase(unittest.TestCase):
         if os.path.isfile(db_name):
             os.remove(db_name)
         # first time the DB is created:
-        with wdb.WDB(db_name) as empty_db:
+        with Database(db_name) as empty_db:
             self.check_empty_db(empty_db)
         # second time the DB exists and it is re-opened:
-        with wdb.WDB(db_name) as empty_db:
+        with Database(db_name) as empty_db:
             self.check_empty_db(empty_db)
 
 
-- 
2.14.3 (Apple Git-98)

